# 2012-03-12
1.zxing库源代码的使用方法:
zxing 的文档十分全面,以下内容来自对文档http://code.google.com/p/zxing/wiki/GettingStarted的理解
-zxing使用ant作为整个程序的编译打包工具,源代码中的build.xml文件已经定义了若干实用的功能(task)
-zxing库使用的核心为源代码中的core文件夹,而javase文件夹中的程序是可以在pc上运行的
 运行方法:
 在先后编译core和javase后,使用命令:
 java -cp javase/javase.jar:core/core.jar com.google.zxing.client.j2se.CommandLineRunner [URL | FILE]
 (Windows用户需要将':'替换为';')
 来获得对某一个图片的解析(以上命令只支持条形码)
2.使用zxing最快,最偷懒的方法:直接下载/android移植版本,修改CaptureActivity.java即可(显然基本上有点邪恶呀!感觉就像
 在抄作业好伐,不过如果项目催的紧的话,就不要怪我用这招啦...)

# 2012-03-10
1.完成调用摄像头并显示实时图像的功能,真机测试调用成功
2.界面采用代码动态实现,而不是使用静态的xml文件,实时性更好
3.下一步预计是通过摄像头获取图片,然后调用zxing来进行识别

# 2012-03-09
1.CameraUtils.java需要提供的功能:
-查看设备是否具备了摄像头
-选择前摄像头或后摄像头的功能
-获取Camera类的对象实例
# 默认状态中,当设备有多个摄像头时,通过Camera.open()方法获得的摄像头获得的是第一个后摄像头
# Android中使用SurfaceView类来保存摄像头获得的图像,使用SufaceView和SurfaceHolder需要主义线程同步
2.CameraPreview.java的主要功能:
-主要负责摄像头的取景功能
-预计封装或者继承于SurfaceView,访问并操作SurfaceHolder
3.FileIO.java主要关注的问题在于Android系统中对文件流的操作,包括文件的读取和写入

# 2012-03-08
1.Android中自定义一个摄像头应用的步骤:
-检测并访问摄像头
-创建一个预览界面类,该类负责御览摄像头获得的图像,并显示
-建立预览布局,决定对上步创建的预览类的具体显示方法
-为开始捕获图像,比如在界面上设置一个按钮,在按下后打开摄像头开始取景
-捕获并且保存文件
-释放摄像头

# 2012-03-06
今天尝试使用http://blog.csdn.net/hellogv/article/details/6101663#comments这篇文章进行了测试
git分支名为demo_1
发现的问题:
1.wakelock似乎没有取得,导致机器会自动休眠
2.对二维码和条形码的支持都不是很理想(没有成功过,T_T!)
